{"version":3,"sources":["defaultimgs.js","images/golf.png","images/canoe.png","components/TweetInFeed.js","pages/Home.js","pages/Profile.js","pages/Settings.js","images/pfp1.png","images/pfp2.png","images/pfp3.png","images/pfp4.png","images/pfp5.png","components/Sidebar.js","images/spaceshooter.jpeg","images/netflix.jpeg","images/academy.png","images/youtube.png","images/js.png","components/Rightbar.js","App.js","reportWebVitals.js","index.js"],"names":["defaultImgs","TweetInFeed","profile","useState","tweetArr","setTweetArr","useMoralis","Moralis","account","useEffect","a","Tweets","Object","extend","query","Query","equalTo","find","results","console","log","error","getTweets","map","e","className","src","attributes","tweeterPfp","tweeterUserName","slice","tweeterAcc","createdAt","toLocaleString","month","day","tweetTxt","tweetImg","fill","size","svg","reverse","Home","user","User","current","contractProcessor","useWeb3ExecuteFunction","inputFile","useRef","selectedFile","setSelectedFile","theFile","setTheFile","tweet","setTweet","data","file","File","name","saveIPFS","img","ipfs","options","contractAddress","functionName","abi","params","msgValue","Units","ETH","fetch","onSuccess","saveTweet","onError","message","newTweet","set","pfp","ethAddress","username","save","window","location","reload","label","value","type","onChange","target","width","onClick","click","ref","event","files","URL","createObjectURL","style","display","backgroundColor","Profile","banner","to","bio","Settings","pfps","setPfps","selectedPFP","setSelectedPFP","setUsername","setBio","isAuthenticated","Web3Api","useMoralisWeb3Api","fetchNFTs","chain","address","getNFTs","mumbaiNFTs","images","result","url","JSON","parse","metadata","image","includes","replace","saveEdits","first","myDetails","labelBgColor","i","Sidebar","Rightbar","trends","spaceshooter","text","link","netflix","academy","js","youtube","prefixIcon","open","App","logOut","then","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","appId","serverUrl","document","getElementById"],"mappings":"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","file":"static/js/main.b06ef8f4.chunk.js","sourcesContent":["export const defaultImgs = [\r\n  \"https://ipfs.moralis.io:2053/ipfs/QmNgA9MNWFfRaoKzBt21VghQopnKXBgVxzyGvv5qjsV4Vw/media/1\",\r\n  \"https://ipfs.moralis.io:2053/ipfs/QmNgA9MNWFfRaoKzBt21VghQopnKXBgVxzyGvv5qjsV4Vw/media/2\",\r\n];\r\n","export default __webpack_public_path__ + \"static/media/golf.cafe0ed3.png\";","export default __webpack_public_path__ + \"static/media/canoe.23df06ed.png\";","import React from \"react\";\r\nimport \"./TweetInFeed.css\";\r\nimport golf from \"../images/golf.png\";\r\nimport canoe from \"../images/canoe.png\";\r\nimport { defaultImgs } from \"../defaultimgs\";\r\nimport { Icon } from \"web3uikit\";\r\nimport { useMoralis } from \"react-moralis\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst TweetInFeed = ({ profile }) => {\r\n  const [tweetArr, setTweetArr] = useState();\r\n  const { Moralis, account } = useMoralis();\r\n\r\n  useEffect(() => {\r\n    async function getTweets() {\r\n      try {\r\n        const Tweets = Moralis.Object.extend(\"Tweets\");\r\n        const query = new Moralis.Query(Tweets);\r\n        if (profile) {\r\n          query.equalTo(\"tweeterAcc\", account);\r\n        }\r\n        const results = await query.find();\r\n\r\n        setTweetArr(results);\r\n        console.log(results);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n    getTweets();\r\n  }, [profile]);\r\n\r\n  return (\r\n    <>\r\n      {tweetArr?.map((e) => {\r\n        return (\r\n          <>\r\n            <div className=\"feedTweet\">\r\n              <img src={e.attributes.tweeterPfp ? e.attributes.tweeterPfp : defaultImgs[0]} className=\"profilePic\"></img>\r\n              <div className=\"completeTweet\">\r\n                <div className=\"who\">\r\n                {e.attributes.tweeterUserName.slice(0, 6)}\r\n                  <div className=\"accWhen\">{\r\n                        `${e.attributes.tweeterAcc.slice(0, 4)}...${e.attributes.tweeterAcc.slice(38)} · \r\n                        ${e.attributes.createdAt.toLocaleString('en-us', { month: 'short' })}  \r\n                        ${e.attributes.createdAt.toLocaleString('en-us', { day: 'numeric' })}\r\n                        `  \r\n                      }\r\n                      </div>\r\n                </div>\r\n                <div className=\"tweetContent\">\r\n                {e.attributes.tweetTxt}\r\n                {e.attributes.tweetImg && (\r\n                        <img\r\n                          src={e.attributes.tweetImg}\r\n                          className=\"tweetImg\"\r\n                        ></img>\r\n                      )}\r\n                </div>\r\n                <div className=\"interactions\">\r\n                  <div className=\"interactionNums\">\r\n                    <Icon fill=\"#3f3f3f\" size={20} svg=\"messageCircle\" />\r\n                  </div>\r\n                  <div className=\"interactionNums\">\r\n                    <Icon fill=\"#3f3f3f\" size={20} svg=\"star\" />\r\n                    12\r\n                  </div>\r\n                  <div className=\"interactionNums\">\r\n                    <Icon fill=\"#3f3f3f\" size={20} svg=\"matic\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </>\r\n        );\r\n      }).reverse()}\r\n\r\n      {/* \r\n      <div className=\"feedTweet\">\r\n        <img src={defaultImgs[0]} className=\"profilePic\"></img>\r\n        <div className=\"completeTweet\">\r\n          <div className=\"who\">\r\n            Juhizzz\r\n            <div className=\"accWhen\">0x42..314 · 1h</div>\r\n          </div>\r\n          <div className=\"tweetContent\">\r\n            Nice Day Golfing Today Shot 73 (+2)\r\n            <img src={golf} className=\"tweetImg\"></img>\r\n          </div>\r\n          <div className=\"interactions\">\r\n            <div className=\"interactionNums\">\r\n              <Icon fill=\"#3f3f3f\" size={20} svg=\"messageCircle\" />\r\n            </div>\r\n            <div className=\"interactionNums\">\r\n              <Icon fill=\"#3f3f3f\" size={20} svg=\"star\" />\r\n              12\r\n            </div>\r\n            <div className=\"interactionNums\">\r\n              <Icon fill=\"#3f3f3f\" size={20} svg=\"matic\" />\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n      <div className=\"feedTweet\">\r\n        <img src={defaultImgs[0]} className=\"profilePic\"></img>\r\n        <div className=\"completeTweet\">\r\n          <div className=\"who\">\r\n            Juhizzz\r\n            <div className=\"accWhen\">0x42..314 · 1h</div>\r\n          </div>\r\n          <div className=\"tweetContent\">\r\n            is simply dummy text of the printing and typesetting industry. Lorem\r\n            Ipsum has been the industry's standard dummy text ever since the\r\n            1500s, when an unknown printer took a galley of type and scrambled\r\n            it to make a type specimen book. It has survived not only five\r\n            centuries, but also the leap into electronic typesetting, remaining\r\n            essentially un\r\n          </div>\r\n          <div className=\"interactions\">\r\n            <div className=\"interactionNums\">\r\n              <Icon fill=\"#3f3f3f\" size={20} svg=\"messageCircle\" />\r\n            </div>\r\n            <div className=\"interactionNums\">\r\n              <Icon fill=\"#3f3f3f\" size={20} svg=\"star\" />\r\n              12\r\n            </div>\r\n            <div className=\"interactionNums\">\r\n              <Icon fill=\"#3f3f3f\" size={20} svg=\"matic\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"feedTweet\">\r\n        <img src={defaultImgs[0]} className=\"profilePic\"></img>\r\n        <div className=\"completeTweet\">\r\n          <div className=\"who\">\r\n            Juhizzz\r\n            <div className=\"accWhen\">0x42..314 · 1h</div>\r\n          </div>\r\n          <div className=\"tweetContent\">\r\n            Thoughts on the new Coca-Cola banana 🥤🍌 flavor?\r\n          </div>\r\n          <div className=\"interactions\">\r\n            <div className=\"interactionNums\">\r\n              <Icon fill=\"#3f3f3f\" size={20} svg=\"messageCircle\" />\r\n            </div>\r\n            <div className=\"interactionNums\">\r\n              <Icon fill=\"#3f3f3f\" size={20} svg=\"star\" />\r\n              12\r\n            </div>\r\n            <div className=\"interactionNums\">\r\n              <Icon fill=\"#3f3f3f\" size={20} svg=\"matic\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"feedTweet\">\r\n        <img src={defaultImgs[0]} className=\"profilePic\"></img>\r\n        <div className=\"completeTweet\">\r\n          <div className=\"who\">\r\n            Juhizzz\r\n            <div className=\"accWhen\">0x42..314 · 1h</div>\r\n          </div>\r\n          <div className=\"tweetContent\">\r\n            Love spending time on the water 🌊🌅\r\n            <img src={canoe} className=\"tweetImg\"></img>\r\n          </div>\r\n          <div className=\"interactions\">\r\n            <div className=\"interactionNums\">\r\n              <Icon fill=\"#3f3f3f\" size={20} svg=\"messageCircle\" />\r\n            </div>\r\n            <div className=\"interactionNums\">\r\n              <Icon fill=\"#3f3f3f\" size={20} svg=\"star\" />\r\n              12\r\n            </div>\r\n            <div className=\"interactionNums\">\r\n              <Icon fill=\"#3f3f3f\" size={20} svg=\"matic\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TweetInFeed;\r\n","import React from \"react\";\r\nimport \"./Home.css\";\r\nimport { defaultImgs } from \"../defaultimgs\";\r\nimport { TextArea, Icon } from \"web3uikit\";\r\nimport { useState, useRef } from \"react\";\r\nimport TweetInFeed from \"../components/TweetInFeed\";\r\nimport { useMoralis, useWeb3ExecuteFunction } from \"react-moralis\";\r\n\r\nconst Home = () => {\r\n\r\n  const { Moralis } = useMoralis();\r\n  const user = Moralis.User.current();\r\n  const contractProcessor = useWeb3ExecuteFunction();\r\n\r\n  const inputFile = useRef(null);\r\n  const [selectedFile, setSelectedFile] = useState();\r\n  const [theFile, setTheFile] = useState();\r\n  const [tweet, setTweet] = useState();\r\n\r\n  async function maticTweet() {\r\n\r\n    if (!tweet) return;\r\n\r\n    let img;\r\n    if (theFile) {\r\n      const data = theFile;\r\n      const file = new Moralis.File(data.name, data);\r\n      await file.saveIPFS();\r\n      img = file.ipfs();\r\n    }else{\r\n      img = \"No Img\"\r\n    }\r\n\r\n    let options = {\r\n      contractAddress: \"0xcA7Cd623F7e4B8250Aa80139696f85Cf33996cA2\",\r\n      functionName: \"addTweet\",\r\n      abi: [{\r\n        \"inputs\": [\r\n          {\r\n            \"internalType\": \"string\",\r\n            \"name\": \"tweetTxt\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"internalType\": \"string\",\r\n            \"name\": \"tweetImg\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"name\": \"addTweet\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"payable\",\r\n        \"type\": \"function\"\r\n      }],\r\n      params: {\r\n        tweetTxt: tweet,\r\n        tweetImg: img,\r\n      },\r\n      msgValue: Moralis.Units.ETH(0.01),\r\n    }\r\n\r\n    await contractProcessor.fetch({\r\n      params: options,\r\n      onSuccess: () => {\r\n        saveTweet();\r\n      },\r\n      onError: (error) => {\r\n        console.log(error.data.message)\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n\r\n  async function saveTweet() {\r\n\r\n    if(!tweet) return;\r\n\r\n    const Tweets = Moralis.Object.extend(\"Tweets\");\r\n\r\n    const newTweet = new Tweets();\r\n\r\n    newTweet.set(\"tweetTxt\", tweet);\r\n    newTweet.set(\"tweeterPfp\", user.attributes.pfp);\r\n    newTweet.set(\"tweeterAcc\", user.attributes.ethAddress);\r\n    newTweet.set(\"tweeterUserName\", user.attributes.username);\r\n\r\n    if (theFile) {\r\n      const data = theFile;\r\n      const file = new Moralis.File(data.name, data);\r\n      await file.saveIPFS();\r\n      newTweet.set(\"tweetImg\", file.ipfs());\r\n    }\r\n\r\n    await newTweet.save();\r\n    window.location.reload();\r\n\r\n  }\r\n\r\n  const onImageClick = () => {\r\n    inputFile.current.click();\r\n  };\r\n\r\n  const changeHandler = (event) => {\r\n    const img = event.target.files[0];\r\n    setTheFile(img);\r\n    setSelectedFile(URL.createObjectURL(img));\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <div className=\"pageIdentify\">Home</div>\r\n      <div className=\"mainContent\">\r\n        <div className=\"profileTweet\">\r\n          <img src={user.attributes.pfp ? user.attributes.pfp : defaultImgs[0]} className=\"profilePic\"></img>\r\n          <div className=\"tweetBox\">\r\n            <TextArea\r\n              label=\"\"\r\n              name=\"tweetTxtArea\"\r\n              value=\"GM World\"\r\n              type=\"text\"\r\n              onChange={(e) => setTweet(e.target.value)}\r\n              width=\"95%\"\r\n            ></TextArea>\r\n            {selectedFile && (\r\n              <img src={selectedFile} className=\"tweetImg\"></img>\r\n            )}\r\n            <div className=\"imgOrTweet\">\r\n              <div className=\"imgDiv\" onClick={onImageClick}>\r\n              <input\r\n                  type=\"file\"\r\n                  name=\"file\"\r\n                  ref={inputFile}\r\n                  onChange={changeHandler}\r\n                  style={{ display: \"none\"}}\r\n                />\r\n                <Icon fill=\"#1DA1F2\" size={20} svg=\"image\"></Icon>\r\n              </div>\r\n              <div className=\"tweetOptions\">\r\n                <div className=\"tweet\" onClick={saveTweet}>Tweet</div>\r\n                <div className=\"tweet\" onClick={maticTweet} style={{ backgroundColor: \"#8247e5\" }}>\r\n                  <Icon fill=\"#ffffff\" size={20} svg=\"matic\" />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <TweetInFeed profile={false}/>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport './Profile.css';\r\nimport { defaultImgs } from \"../defaultimgs\";\r\nimport TweetInFeed from \"../components/TweetInFeed\";\r\nimport { useMoralis } from \"react-moralis\";\r\n\r\n\r\nconst Profile = () => {\r\n  const { Moralis} = useMoralis();\r\n  const user = Moralis.User.current();\r\n\r\n  return (\r\n    <>\r\n    <div className=\"pageIdentify\">Profile</div>\r\n    <img className=\"profileBanner\" src={user.attributes.banner ? user.attributes.banner : defaultImgs[1]}></img>\r\n    <div className=\"pfpContainer\">\r\n      <img className=\"profilePFP\" src={user.attributes.pfp ? user.attributes.pfp : defaultImgs[0]}></img>\r\n      <div className=\"profileName\">{user.attributes.username.slice(0, 6)}</div>\r\n      <div className=\"profileWallet\">{`${user.attributes.ethAddress.slice(0, 4)}...\r\n            ${user.attributes.ethAddress.slice(38)}`}</div>\r\n      <Link to=\"/settings\">\r\n          <div className=\"profileEdit\">Edit profile</div>\r\n      </Link>\r\n      <div className=\"profileBio\">\r\n      {user.attributes.bio}\r\n      </div>\r\n      <div className=\"profileTabs\">\r\n          <div className=\"profileTab\">\r\n          Your Tweets\r\n          </div>\r\n      </div>\r\n    </div>\r\n    <TweetInFeed profile={true}></TweetInFeed>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Settings.css\";\r\nimport { useState, useRef, useEffect } from \"react\";\r\nimport { Input } from \"web3uikit\";\r\nimport pfp1 from \"../images/pfp1.png\";\r\nimport pfp2 from \"../images/pfp2.png\";\r\nimport pfp3 from \"../images/pfp3.png\";\r\nimport pfp4 from \"../images/pfp4.png\";\r\nimport pfp5 from \"../images/pfp5.png\";\r\nimport { defaultImgs } from \"../defaultimgs\";\r\nimport { useMoralis, useMoralisWeb3Api } from \"react-moralis\";\r\n\r\nconst Settings = () => {\r\n\r\n  const [pfps, setPfps] = useState([]);\r\n  const [selectedPFP, setSelectedPFP] = useState();\r\n  const inputFile = useRef(null);\r\n  const [selectedFile, setSelectedFile] = useState(defaultImgs[1]);\r\n  const [theFile, setTheFile] = useState();\r\n  const [username, setUsername] = useState();\r\n  const [bio, setBio] = useState();\r\n  const { Moralis, isAuthenticated, account } = useMoralis();\r\n  const Web3Api = useMoralisWeb3Api();\r\n\r\n\r\n  const resolveLink = (url) => {\r\n    if (!url || !url.includes(\"ipfs://\")) return url;\r\n    return url.replace(\"ipfs://\", \"https://gateway.ipfs.io/ipfs/\");\r\n  };\r\n\r\n  useEffect(() => {\r\n\r\n    const fetchNFTs = async () => {\r\n      const options = {\r\n        chain: \"mumbai\",\r\n        address: account\r\n      }\r\n\r\n      const mumbaiNFTs = await Web3Api.account.getNFTs(options);\r\n      const images = mumbaiNFTs.result.map(\r\n        (e) => resolveLink(JSON.parse(e.metadata)?.image)\r\n      );\r\n      setPfps(images);\r\n    }\r\n\r\n    fetchNFTs();\r\n\r\n  },[isAuthenticated, account])\r\n\r\n  const onBannerClick = () => {\r\n    inputFile.current.click();\r\n  };\r\n\r\n  const changeHandler = (event) => {\r\n    \r\n    const img = event.target.files[0];\r\n    setTheFile(img);\r\n    setSelectedFile(URL.createObjectURL(img));\r\n  };\r\n\r\n  const saveEdits = async () => {\r\n    const User = Moralis.Object.extend(\"_User\");\r\n    const query = new Moralis.Query(User);\r\n    const myDetails = await query.first();\r\n\r\n    if (bio){\r\n      myDetails.set(\"bio\", bio);\r\n    }\r\n\r\n    if (selectedPFP){\r\n      myDetails.set(\"pfp\", selectedPFP);\r\n    }\r\n\r\n    if (username){\r\n      myDetails.set(\"username\", username);\r\n    }\r\n\r\n    if (theFile) {\r\n      const data = theFile;\r\n      const file = new Moralis.File(data.name, data);\r\n      await file.saveIPFS();\r\n      myDetails.set(\"banner\", file.ipfs());\r\n    }\r\n\r\n    await myDetails.save();\r\n    window.location.reload();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"pageIdentify\">Settings</div>\r\n      <div className=\"settingsPage\">\r\n        <Input\r\n          label=\"Name\"\r\n          name=\"NameChange\"\r\n          width=\"100%\"\r\n          labelBgColor=\"#141d26\"\r\n          onChange={(e)=> setUsername(e.target.value)}\r\n        />\r\n\r\n        <Input\r\n          label=\"Bio\"\r\n          name=\"bioChange\"\r\n          width=\"100%\"\r\n          labelBgColor=\"#141d26\"\r\n          onChange={(e)=> setBio(e.target.value)}\r\n        />\r\n\r\n        <div className=\"pfp\">\r\n          Profile Image (Your NFTs)\r\n\r\n          <div className=\"pfpOptions\">\r\n            {pfps.map((e,i) => {\r\n\r\n              return(\r\n                <>\r\n                <img\r\n                src={e}\r\n                className={\r\n                  selectedPFP === e ? \"pfpOptionSelected\" : \"pfpOption\"\r\n                }\r\n                onClick={() => {setSelectedPFP(pfps[i]);}}\r\n                ></img>\r\n                </>\r\n              )\r\n            })}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"pfp\">\r\n          Profile Banner\r\n          <div className=\"pfpOptions\">\r\n            <img\r\n              src={selectedFile}\r\n              onClick={onBannerClick}\r\n              className=\"banner\"\r\n            ></img>\r\n            <input\r\n              type=\"file\"\r\n              name=\"file\"\r\n              ref={inputFile}\r\n              onChange={changeHandler}\r\n              style={{ display: \"none\" }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"save\" onClick={() => saveEdits()}>\r\n          Save\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","export default __webpack_public_path__ + \"static/media/pfp1.394c20a6.png\";","export default __webpack_public_path__ + \"static/media/pfp2.77db00e7.png\";","export default __webpack_public_path__ + \"static/media/pfp3.63c3a335.png\";","export default __webpack_public_path__ + \"static/media/pfp4.b4e70662.png\";","export default __webpack_public_path__ + \"static/media/pfp5.ba3d30f6.png\";","import React from \"react\";\r\nimport \"./Sidebar.css\";\r\nimport { Icon } from \"web3uikit\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useMoralis } from \"react-moralis\";\r\nimport { defaultImgs } from \"../defaultimgs\";\r\n\r\nconst Sidebar = () => {\r\n\r\n  const { Moralis} = useMoralis();\r\n  const user = Moralis.User.current();\r\n\r\n  return (\r\n    <>\r\n      <div className=\"siderContent\">\r\n        <div className=\"menu\">\r\n          <div className=\"details\">\r\n            <Icon fill=\"#ffffff\" size={33} svg=\"twitter\" />\r\n          </div>\r\n\r\n          <Link to=\"/\" className=\"link\">\r\n            <div className=\"menuItems\">\r\n              <Icon fill=\"#ffffff\" size={33} svg=\"list\" />\r\n              Home\r\n            </div>\r\n          </Link>\r\n\r\n          <Link to=\"/profile\" className=\"link\">\r\n            <div className=\"menuItems\">\r\n              <Icon fill=\"#ffffff\" size={33} svg=\"user\" />\r\n              Profile\r\n            </div>\r\n          </Link>\r\n\r\n          <Link to=\"/settings\" className=\"link\">\r\n            <div className=\"menuItems\">\r\n              <Icon fill=\"#ffffff\" size={33} svg=\"cog\" />\r\n              Settings\r\n            </div>\r\n          </Link>\r\n        </div>\r\n\r\n        <div className=\"details\">\r\n          <img src={user.attributes.pfp ? user.attributes.pfp : defaultImgs[0]} className=\"profilePic\"></img>\r\n          <div className=\"profile\">\r\n            <div className=\"who\">\r\n              {user.attributes.username.slice(0, 6)}\r\n            </div>\r\n            <div className=\"accWhen\">\r\n              {`${user.attributes.ethAddress.slice(0, 4)}...${user.attributes.ethAddress.slice(38)}`}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","export default __webpack_public_path__ + \"static/media/spaceshooter.efac87b8.jpeg\";","export default __webpack_public_path__ + \"static/media/netflix.411c7033.jpeg\";","export default __webpack_public_path__ + \"static/media/academy.c7a89823.png\";","export default __webpack_public_path__ + \"static/media/youtube.afdf35e4.png\";","export default __webpack_public_path__ + \"static/media/js.33c19307.png\";","import React from \"react\";\r\nimport './Rightbar.css';\r\nimport spaceshooter from \"../images/spaceshooter.jpeg\";\r\nimport netflix from \"../images/netflix.jpeg\";\r\nimport academy from \"../images/academy.png\";\r\nimport youtube from \"../images/youtube.png\";\r\nimport js from \"../images/js.png\";\r\nimport { Input } from \"web3uikit\";\r\n\r\n\r\nconst Rightbar = () => {\r\n  const trends = [\r\n    {\r\n      img: spaceshooter,\r\n      text: \"Learn how to build a Web3 FPS game using unity...\",\r\n      link: \"https://moralis.io/moralis-projects-learn-to-build-a-web3-space-fps-game/\",\r\n    },\r\n    {\r\n      img: netflix,\r\n      text: \"The fisrt Moralis Project! Let's Netflix and chill...\",\r\n      link: \"https://moralis.io/moralis-projects-learn-to-build-a-web3-netflix-clone/\",\r\n    },\r\n    {\r\n      img: academy,\r\n      text: \"Master DeFi in 2022. Start  at the Moralis Academy...\",\r\n      link: \"https://academy.moralis.io/courses/defi-101\",\r\n    },\r\n    {\r\n      img: js,\r\n      text: \"Become a Web3 Developer with just simple JS...\",\r\n      link: \"https://academy.moralis.io/all-courses\",\r\n    },\r\n    {\r\n      img: youtube,\r\n      text: \"Best youtube channel to learn about Web3...\",\r\n      link: \"https://www.youtube.com/channel/UCgWS9Q3P5AxCWyQLT2kQhBw\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n    <div className=\"rightbarContent\">\r\n      <Input\r\n        label=\"Search Twitter\"\r\n        name =\"Search Twitter\"\r\n        prefixIcon=\"search\"\r\n        labelBgColor=\"#141d26\" \r\n        >\r\n      </Input>\r\n\r\n    <div className=\"trends\">\r\n      News For You\r\n      {trends.map((e) => {\r\n          return(\r\n            <>\r\n            <div className=\"trend\" onClick={() => window.open(e.link)}>\r\n              <img src={e.img} className=\"trendImg\"></img>\r\n              <div className=\"trendText\">{e.text}</div>\r\n            </div>\r\n            </>\r\n          )\r\n      })}\r\n    </div>\r\n\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Rightbar;\r\n\r\n","import React from \"react\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport Home from \"./pages/Home\";\r\nimport Profile from \"./pages/Profile\";\r\nimport Settings from \"./pages/Settings\";\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport Rightbar from \"./components/Rightbar\";\r\nimport \"./App.css\";\r\nimport { useMoralis } from \"react-moralis\";\r\nimport { ConnectButton, Icon } from \"web3uikit\";\r\n\r\nconst App = () => {\r\n  const { isAuthenticated, Moralis } = useMoralis();\r\n\r\n  return (\r\n    <>\r\n    {isAuthenticated ? (\r\n      <div className=\"page\">\r\n        <div className=\"sideBar\">\r\n          <Sidebar />\r\n          <div\r\n              className=\"logout\"\r\n              onClick={() => {\r\n                Moralis.User.logOut().then(() => {\r\n                  window.location.reload();\r\n                });\r\n              }}\r\n            >\r\n              Logout\r\n            </div>\r\n        </div>\r\n        <div className=\"mainWindow\">\r\n          <Routes>\r\n            <Route path=\"/\" element={<Home />} />\r\n            <Route path=\"/profile\" element={<Profile />} />\r\n            <Route path=\"/settings\" element={<Settings />} />\r\n          </Routes>\r\n        </div>\r\n        <div className=\"rightBar\">\r\n          <Rightbar />\r\n        </div>\r\n      </div>\r\n      ) : (\r\n        <div className=\"loginPage\">\r\n          <Icon fill=\"#ffffff\" size={40} svg=\"twitter\" />\r\n          <ConnectButton />\r\n        </div>\r\n\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { MoralisProvider } from \"react-moralis\";\r\nimport { NotificationProvider } from 'web3uikit';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <MoralisProvider appId=\"6cSvnXGIKw65FBHDFhSRBrb6RQd3HLQ6LveTCMQs\" serverUrl=\"https://srmoi8g1vyww.usemoralis.com:2053/server\">\r\n      <NotificationProvider>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n      </NotificationProvider>\r\n    </MoralisProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}